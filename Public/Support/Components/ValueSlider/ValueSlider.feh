namespace modifies GUIKit {
	
	class ValueSlider extends GUIKit.AbstractComponent {
				
		[attribute number  maximum  86400	 'The maximum value'];
		[attribute number  minimum  0		 'The minimum value'];
		[attribute string  units	'minutes' 'The value slider units'];
		[attribute number  value	0		 'The slider value'];
		[formvalue value];
		
		function styleSheetCursor()
			return "move;";

		function setTextValue( string value ) {
			if( value ) {
				if( .units().toLower() == 'clock' and value.length() == 4 ) {
					string hours = value[0..1];
					string minutes = value[2..3];
					.setValue((hours.toNumber() * 60 * 60) + (minutes.toNumber() * 60));
				} else {
					.setValue(value.toNumber());
				}
			}
		}
		function textValue() {
			if( .units().toLower() == 'clock' ) {
				number hours = .value() / (60 * 60);
				number minutes = (.value() / (60)) % 60;
				return '' + (hours < 10 ? '0' : '') + hours + (minutes < 10 ? '0' : '') + minutes;
			} else {
				return '' + .value();
			}
		}

		function render() {
			if( .visible() ) {
				array values = .generateTemplateAttributes('wfValueSlider');
				object component = GUIKit.componentByName('ValueSlider');
				string path = component.pathForComponentResource('ValueSlider.template');
				if( ['seconds', 'minutes', 'hours','days'].valueExists(.units().toLower()) ) {
					values['formatHelper'] = 'TimeFormatter';
				}
				if( .units().toLower() == 'clock' ) {
					values['formatHelper'] = 'ClockFormatter';
				}
				return GUIKit.ViewTemplate.renderPath( path, values );
			}
			return "";
		}
	}
}