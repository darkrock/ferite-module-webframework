
namespace modifies GUIKit {

	class Calendar extends GUIKit.View { 
		
		constructor() {
			super();
			.textValue = I('Change');
		}
		function defaultWidth() {
			return "80";
		}
		number date = 0;
		string image;
		function handleFormValue( string value ) {
			number v = value.toNumber();
			value != '' and .date = v;
		}
		function generateAttributes() {
            array a = super.generateAttributes();
            a['Date'] = '' + .date;
            a['Image'] = .image;
            return a;
        }
		function setDate( string value ) {
			.setDate(value.toNumber());
		}
		function setDate( number date ) {
			.date = date;
			.touch();
		}
		function date() {
			return .date;
		}
		function setImage( string value ) {
			.image = value;
		}

		function render() {
			if( .visible() ) {
				array values = .generateTemplateAttributes('wfCalendar');
				
				values['ID'] = .id;
				values['HumanID'] = .id + 'Human';
				values['HumanDate'] = I('Not Set');
				if( .date > 0 ) {
					values['HumanDate'] = formatDate(.date);
				}
				values['EventCodeRaw'] = "CalendarPopup('${.id}',${.date});";
				values['EventCode'] = "onclick=\"CalendarPopup('${.id}',isNaN(parseInt(\$('${.id}').value)) ? 0 : parseInt(\$('${.id}').value)); return false\"";
				if ( .image ) {
					values['Image'] = uriForImageResource(.image);
				}
				
				return .componentTemplateRender('Calendar', 'Calendar.template', values);			
			}
			return '';
		}

		function mcamRootNode() {
			return "${.id}Wrapper";
		}
		function debugContainer() {
			return .id + 'Wrapper';
		}
	}
}
